<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zhouqian Blog</title>
    <link>https://zhouqian0.github.io/</link>
    <description>Recent content on Zhouqian Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://zhouqian0.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>接雨水</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/42/</link>
      <pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/42/</guid>
      <description>接雨水 给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。 方案一：垂直方向每一竖计算能接住的雨水量（前</description>
    </item>
    
    <item>
      <title>柱状图中最大的矩形</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/84/</link>
      <pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/84/</guid>
      <description>柱状图中最大的矩形 给定 n 个非负整数，用来表示柱状图中各个柱子的高度。每个柱子彼此相邻，且宽度为 1 。 求在该柱状图中，能够勾勒出来的矩形的最大面</description>
    </item>
    
    <item>
      <title>滑动窗口最大值</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/239/</link>
      <pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/239/</guid>
      <description>滑动窗口最大值 给你一个整数数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。 你只可以看到在滑动窗口内的 k 个数字。滑动窗</description>
    </item>
    
    <item>
      <title>基本计算器</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/224/</link>
      <pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/224/</guid>
      <description>基本计算器 给你一个字符串表达式 s ，请你实现一个基本计算器来计算并返回它的值。 注意:不允许使用任何将字符串作为数学表达式计算的内置函数，比如 eval()</description>
    </item>
    
    <item>
      <title>逆波兰表达式求值</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/150/</link>
      <pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/150/</guid>
      <description>逆波兰表达式求值 根据 逆波兰表示法，求表达式的值。 有效的算符包括 +、-、*、/。每个运算对象可以是整数，也可以是另一个逆波兰表达式。 注意两个整</description>
    </item>
    
    <item>
      <title>最小栈</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/155/</link>
      <pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/155/</guid>
      <description>最小栈 设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。 实现 MinStack 类: MinStack() 初始化堆栈对象。 void push(int val) 将元素val推入堆栈。 void pop() 删</description>
    </item>
    
    <item>
      <title>有效的括号</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/20/</link>
      <pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/20/</guid>
      <description>有效的括号 给定一个只包括 &amp;lsquo;(&amp;rsquo;，&amp;rsquo;)&amp;rsquo;，&amp;rsquo;{&amp;rsquo;，&amp;rsquo;}&amp;r</description>
    </item>
    
    <item>
      <title>环形链表</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/141/</link>
      <pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/141/</guid>
      <description>环形链表 给你一个链表的头节点 head ，判断链表中是否有环。 如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中</description>
    </item>
    
    <item>
      <title>环形链表 II</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/142/</link>
      <pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/142/</guid>
      <description>环形链表 II 给定一个链表的头节点 head，返回链表开始入环的第一个节点。如果链表无环，则返回 null。 如果链表中有某个节点，可以通过连续跟踪 next</description>
    </item>
    
    <item>
      <title>邻值查找</title>
      <link>https://zhouqian0.github.io/algorithm/acwing/136/</link>
      <pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/acwing/136/</guid>
      <description>邻值查找 给定一个长度为 n 的序列 A ，A 中的数各不相同。 对于 A 中的每一个数 Ai ，求： min1≤j&amp;lt;i|Ai−Aj| 以及令上式取到最小值的 j （</description>
    </item>
    
    <item>
      <title>K 个一组翻转链表</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/25/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/25/</guid>
      <description>K 个一组翻转链表 给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。 k 是一个正整数，它的值小于或等于链表的长度。如果节点总数不</description>
    </item>
    
    <item>
      <title>反转链表</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/206/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/206/</guid>
      <description>反转链表 给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。 方案一：通过过滤器将所有非零元素顺序前置 /** * Definition for singly-linked list. * type ListNode struct { * Val int * Next *ListNode *</description>
    </item>
    
    <item>
      <title>删除有序数组中的重复项</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/26/</link>
      <pubDate>Mon, 13 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/26/</guid>
      <description>删除有序数组中的重复项 给你一个 升序排列 的数组 nums ，请你 原地 删除重复出现的元素，使每个元素 只出现一次 ，返回删除后数组的新长度。元素的 相对顺序 应该</description>
    </item>
    
    <item>
      <title>合并两个有序数组</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/88/</link>
      <pubDate>Mon, 13 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/88/</guid>
      <description>合并两个有序数组 给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。 请你 合并 nums2 到 nums1 中，使合并后</description>
    </item>
    
    <item>
      <title>移动零</title>
      <link>https://zhouqian0.github.io/algorithm/leetcode/283/</link>
      <pubDate>Mon, 13 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/algorithm/leetcode/283/</guid>
      <description>移动零 给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。 请注意 ，必须在不复制数组的情况下原地对数组进行</description>
    </item>
    
    <item>
      <title>Linux 日常命令 — find</title>
      <link>https://zhouqian0.github.io/2022/05/25/linux/find/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/2022/05/25/linux/find/</guid>
      <description>介绍 find 命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。 如果使用该命令时，不设置任何参数，则 find 命令将在当前目录</description>
    </item>
    
    <item>
      <title>工作区和GOPATH</title>
      <link>https://zhouqian0.github.io/2022/05/25/install-source/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/2022/05/25/install-source/</guid>
      <description>环境介绍 通过 docker image 创建的 container。 通过命令 docker run -it golang 启动容器。 容器使用 Go 版本：v1.18.2 linux/amd64 GOROOT GO 语言的安装路径。 GOPATH Go 的工作目录，值为</description>
    </item>
    
    <item>
      <title>Linux 日常命令 — df</title>
      <link>https://zhouqian0.github.io/2022/05/18/linux/df/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/2022/05/18/linux/df/</guid>
      <description>介绍 df（disk free）：用于显示在 Linux 系统上的文件系统磁盘使用情况统计。 如果命令未指定目录，则默认展示当前被挂载的文件系统的可用空间（单</description>
    </item>
    
    <item>
      <title>Linux 日常命令 — du</title>
      <link>https://zhouqian0.github.io/2022/05/18/linux/du/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/2022/05/18/linux/du/</guid>
      <description>介绍 du（disk usage）：用于显示指定的目录或文件所占用的磁盘空间。 如果命令未指定目录，则默认展示当前目录的文件磁盘使用情况（单位 kb</description>
    </item>
    
    <item>
      <title>Linux 磁盘占用分析</title>
      <link>https://zhouqian0.github.io/2022/05/18/disk/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/2022/05/18/disk/</guid>
      <description>磁盘相关命令 df du 大文件占用查找思路 使用 df -Th 找到希望查找的目录中磁盘占用最大的目录。 [root@iZuf6cdrrzbsjtp7kwq6haZ ~]# df -Th Filesystem Type Size Used Avail Use% Mounted on devtmpfs devtmpfs 387M 0 387M 0% /dev tmpfs tmpfs 405M 0 405M 0% /dev/shm tmpfs tmpfs 405M</description>
    </item>
    
    <item>
      <title>Go 语言介绍</title>
      <link>https://zhouqian0.github.io/2022/05/17/intro/</link>
      <pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/2022/05/17/intro/</guid>
      <description>Go 语言简介 Go 语言是 Google 开发的一种静态强类型、编译型、并发型，并具有垃圾回收功能的编程语言。 Go 语言优势 可以用作构建快速、可靠、高效的规模化软件，</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhouqian0.github.io/search/placeholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/search/placeholder/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhouqian0.github.io/top/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/top/about/</guid>
      <description>I was nobody, so there&amp;rsquo;s really no risk in losing anything.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhouqian0.github.io/top/books/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/top/books/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Posts Archive</title>
      <link>https://zhouqian0.github.io/top/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhouqian0.github.io/top/archive/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
